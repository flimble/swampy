<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Code\swampy\IntegrationTest\bin\Debug\Swampy.IntegrationTest.dll" total="19" errors="4" failures="2" not-run="0" inconclusive="12" ignored="0" skipped="0" invalid="0" date="2012-11-05" time="11:51:36">
  <environment nunit-version="2.6.2.12296" clr-version="2.0.50727.6387" os-version="Microsoft Windows NT 6.2.9200.0" platform="Win32NT" cwd="C:\code\swampy" machine-name="FLIMBLEBASELINE" user="John" user-domain="FLIMBLEBASELINE" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Assembly" name="C:\Code\swampy\IntegrationTest\bin\Debug\Swampy.IntegrationTest.dll" executed="True" result="Failure" success="False" time="3.358" asserts="0">
    <results>
      <test-suite type="Namespace" name="Swampy" executed="True" result="Failure" success="False" time="3.352" asserts="0">
        <results>
          <test-suite type="Namespace" name="IntegrationTest" executed="True" result="Failure" success="False" time="3.352" asserts="0">
            <results>
              <test-suite type="Namespace" name="BDD" executed="True" result="Inconclusive" success="False" time="0.488" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="AdditionFeature" description="Addition" executed="True" result="Inconclusive" success="False" time="0.486" asserts="0">
                    <results>
                      <test-case name="Swampy.IntegrationTest.BDD.AdditionFeature.AddANewEndpoint" description="Add a new endpoint" executed="True" result="Inconclusive" success="False" time="0.204" asserts="0">
                        <reason>
                          <message><![CDATA[No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"I have added a new endpoint")]
        public void GivenIHaveAddedANewEndpoint()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"I call the service for sit(.*)")]
        public void WhenICallTheServiceForSit(int p0)
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"The key should be there for all environments")]
        public void ThenTheKeyShouldBeThereForAllEnvironments()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.BDD.AdditionFeature.AddingANewKey" description="Adding a new Key" executed="True" result="Inconclusive" success="False" time="0.016" asserts="0">
                        <reason>
                          <message><![CDATA[No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"I have an existing set of environments")]
        public void GivenIHaveAnExistingSetOfEnvironments()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"I add a new key")]
        public void WhenIAddANewKey()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"The key is added to all environments but not validated")]
        public void ThenTheKeyIsAddedToAllEnvironmentsButNotValidated()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.BDD.AdditionFeature.AddTwoNumbers" description="Add two numbers" executed="True" result="Inconclusive" success="False" time="0.031" asserts="0">
                        <categories>
                          <category name="mytag" />
                        </categories>
                        <reason>
                          <message><![CDATA[One or more step definitions are not implemented yet.
  StepDefinition1.GivenIHaveEnteredSomethingIntoTheCalculator(50)]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.BDD.AdditionFeature.Authorisation" description="Authorisation" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                        <reason>
                          <message><![CDATA[No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"I am acessing the admin page")]
        public void GivenIAmAcessingTheAdminPage()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"I must be authorised")]
        public void ThenIMustBeAuthorised()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.BDD.AdditionFeature.ChangingAReplacementToken" description="Changing a replacement token" executed="True" result="Inconclusive" success="False" time="0.016" asserts="0">
                        <reason>
                          <message><![CDATA[No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"I have an existing replacement token")]
        public void GivenIHaveAnExistingReplacementToken()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Given(@"I have config values that use it")]
        public void GivenIHaveConfigValuesThatUseIt()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"I attempt to modify the replacement token")]
        public void WhenIAttemptToModifyTheReplacementToken()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"The new replacement value must be validdated\.")]
        public void ThenTheNewReplacementValueMustBeValiddated_()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.BDD.AdditionFeature.ConfigCheck" description="Config Check" executed="True" result="Inconclusive" success="False" time="0.015" asserts="0">
                        <reason>
                          <message><![CDATA[No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"There is a wildcard placeholder in my endpoint")]
        public void GivenThereIsAWildcardPlaceholderInMyEndpoint()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"I retrieve the endpoint")]
        public void WhenIRetrieveTheEndpoint()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"If there are no replacement values an exception is thrown")]
        public void ThenIfThereAreNoReplacementValuesAnExceptionIsThrown()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.BDD.AdditionFeature.ConfigReplacement" description="Config Replacement" executed="True" result="Inconclusive" success="False" time="0.005" asserts="0">
                        <reason>
                          <message><![CDATA[No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"I have wildcard")]
        public void GivenIHaveWildcard()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"I create a new environment")]
        public void WhenICreateANewEnvironment()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"All environment data is updated at read time\. Note validation must happen when a config replacement value is modified as this will affect all other keys\.")]
        public void ThenAllEnvironmentDataIsUpdatedAtReadTime_NoteValidationMustHappenWhenAConfigReplacementValueIsModifiedAsThisWillAffectAllOtherKeys_()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.BDD.AdditionFeature.DiffByEnvironmentQuickView" description="Diff by Environment QuickView" executed="True" result="Inconclusive" success="False" time="0.004" asserts="0">
                        <reason>
                          <message><![CDATA[No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"I have the same key value in two environment")]
        public void GivenIHaveTheSameKeyValueInTwoEnvironment()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"I select the two keys and go to the comparison page")]
        public void WhenISelectTheTwoKeysAndGoToTheComparisonPage()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"I can compare two perhaps using DiffPlex\?")]
        public void ThenICanCompareTwoPerhapsUsingDiffPlex()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.BDD.AdditionFeature.MissingKeyQuickView" description="Missing Key QuickView" executed="True" result="Inconclusive" success="False" time="0.004" asserts="0">
                        <reason>
                          <message><![CDATA[No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"I have already created a number of environment entries")]
        public void GivenIHaveAlreadyCreatedANumberOfEnvironmentEntries()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Given(@"Some environments do not have all keys populated")]
        public void GivenSomeEnvironmentsDoNotHaveAllKeysPopulated()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"I go to the value configuration page")]
        public void WhenIGoToTheValueConfigurationPage()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"The view will show me in red a list of all the keys that do not match")]
        public void ThenTheViewWillShowMeInRedAListOfAllTheKeysThatDoNotMatch()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.BDD.AdditionFeature.RetrieveConfigValue" description="Retrieve config value" executed="True" result="Inconclusive" success="False" time="0.016" asserts="0">
                        <reason>
                          <message><![CDATA[No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"I have provided ""(.*)"" into the environment service")]
        public void GivenIHaveProvidedIntoTheEnvironmentService(string p0)
        {
            ScenarioContext.Current.Pending();
        }
        
        [Given(@"I have entered ""(.*)"" key into the environment service")]
        public void GivenIHaveEnteredKeyIntoTheEnvironmentService(string p0)
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"I call the service")]
        public void WhenICallTheService()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"the result should be ""(.*)""")]
        public void ThenTheResultShouldBe(string p0)
        {
            ScenarioContext.Current.Pending();
        }
    }
}
]]></message>
                        </reason>
                      </test-case>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Mongo" executed="True" result="Failure" success="False" time="0.089" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="Session_Test" executed="True" result="Failure" success="False" time="0.089" asserts="0">
                    <results>
                      <test-case name="Swampy.IntegrationTest.Mongo.Session_Test.insert_environment_test" executed="True" result="Error" success="False" time="0.081" asserts="0">
                        <failure>
                          <message><![CDATA[System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                          <stack-trace><![CDATA[at Swampy.IntegrationTest.Mongo.Session_Test.insert_environment_test() in c:\Code\swampy\IntegrationTest\Mongo\Session_Test.cs:line 23
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.Mongo.Session_Test.query_test_nested" executed="True" result="Error" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                          <stack-trace><![CDATA[at Swampy.IntegrationTest.Mongo.Session_Test.query_test_nested() in c:\Code\swampy\IntegrationTest\Mongo\Session_Test.cs:line 66
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.Mongo.Session_Test.query_test_single_level" executed="True" result="Error" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                          <stack-trace><![CDATA[at Swampy.IntegrationTest.Mongo.Session_Test.query_test_single_level() in c:\Code\swampy\IntegrationTest\Mongo\Session_Test.cs:line 41
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.Mongo.Session_Test.update_existing_test" executed="True" result="Error" success="False" time="0.001" asserts="0">
                        <failure>
                          <message><![CDATA[System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                          <stack-trace><![CDATA[at Swampy.IntegrationTest.Mongo.Session_Test.update_existing_test() in c:\Code\swampy\IntegrationTest\Mongo\Session_Test.cs:line 94
]]></stack-trace>
                        </failure>
                      </test-case>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="QueryObjects" executed="True" result="Inconclusive" success="False" time="1.224" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="EndpointsWithMatchingKeyQuery_Test" executed="True" result="Inconclusive" success="False" time="1.223" asserts="0">
                    <results>
                      <test-case name="Swampy.IntegrationTest.QueryObjects.EndpointsWithMatchingKeyQuery_Test.returns_single_key_with_connection_string" executed="True" result="Inconclusive" success="False" time="1.223" asserts="0">
                        <reason>
                          <message><![CDATA[To complete. Issue with querying nested collections with the IMongoQuery interface. Go figure.]]></message>
                        </reason>
                      </test-case>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Service" executed="True" result="Failure" success="False" time="1.951" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="SwampyEndpointService_Test" executed="True" result="Failure" success="False" time="1.543" asserts="0">
                    <results>
                      <test-case name="Swampy.IntegrationTest.Service.SwampyEndpointService_Test.incorrect_environment_name_returns_empty_result_list" executed="True" result="Inconclusive" success="False" time="0.027" asserts="0">
                        <reason>
                          <message><![CDATA[TODO]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.Service.SwampyEndpointService_Test.incorrect_key_returns_empty_result_list" executed="True" result="Failure" success="False" time="1.233" asserts="1">
                        <failure>
                          <message><![CDATA[  Expected: 0
  But was:  32
]]></message>
                          <stack-trace><![CDATA[at Swampy.IntegrationTest.Service.SwampyEndpointService_Test.incorrect_key_returns_empty_result_list() in c:\Code\swampy\IntegrationTest\Service\SwampyEndpointService_Test.cs:line 49
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.Service.SwampyEndpointService_Test.multiple_endpoint_returns_saved_value_to_service" executed="True" result="Failure" success="False" time="0.133" asserts="1">
                        <failure>
                          <message><![CDATA[  Expected string length 147 but was 4. Strings differ at index 0.
  Expected: "data source=AUSYDHQ-PSTSQ04.SAIG.frd.global;initial catalog=C..."
  But was:  "SIT2"
  -----------^
]]></message>
                          <stack-trace><![CDATA[at Swampy.IntegrationTest.Service.SwampyEndpointService_Test.multiple_endpoint_returns_saved_value_to_service() in c:\Code\swampy\IntegrationTest\Service\SwampyEndpointService_Test.cs:line 38
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="Swampy.IntegrationTest.Service.SwampyEndpointService_Test.single_endpoint_returns_saved_value_to_service" executed="True" result="Success" success="True" time="0.140" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>